version: "3.8"

services:
  postgres:
    image: postgres:16
    restart: always
    environment:
      - POSTGRES_USER=root
      - POSTGRES_PASSWORD=romiux123
      - POSTGRES_DB=n8n
    volumes:
      - db_storage:/var/lib/postgresql/data
    networks:
      - n8nnet
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -h localhost -U root -d n8n"]
      interval: 5s
      timeout: 5s
      retries: 10

  n8n:
    image: docker.n8n.io/n8nio/n8n
    restart: always
    environment:
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_HOST=postgres
      - DB_POSTGRESDB_PORT=5432
      - DB_POSTGRESDB_DATABASE=n8n
      - DB_POSTGRESDB_USER=root
      - DB_POSTGRESDB_PASSWORD=romiux123
      - N8N_SECURE_COOKIE=false
      - N8N_DEFAULT_CORS=true
      - N8N_CORS_ALLOW_ORIGIN=http://localhost:4200
    ports:
      - 5678:5678
    links:
      - postgres
    volumes:
      - n8n_storage:/home/node/.n8n
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - n8nnet

  mcp:
    build:
      context: .
      dockerfile: Dockerfile
    restart: unless-stopped
    ports:
      - 8080:8080
    volumes:
      - .:/app
    working_dir: /app
    command: npm start
    networks:
      - n8nnet

networks:
  n8nnet:
    driver: bridge

# Romiux123@
volumes:
  db_storage:
  n8n_storage:
  ollama_storage:
